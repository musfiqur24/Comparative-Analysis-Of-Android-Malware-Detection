{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["leJkJujwr2Bk","EcSChvkFsbg7"],"authorship_tag":"ABX9TyOJLadibt3Q5+T7iOdY04zQ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# SVM Model to detect Malware"],"metadata":{"id":"h2ayaE98rQyF"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.svm import SVC\n","from sklearn.metrics import accuracy_score, precision_score, recall_score\n","import joblib\n","\n","# Read the dataset\n","df = pd.read_csv(\"filtered_Correlaton_dataset.csv\")\n","\n","# Separate features (X) and target variable (y)\n","X = df.drop(columns=['class'])\n","y = df['class']\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Initialize the SVM model\n","svm_model = SVC(kernel='linear')\n","\n","# Train the SVM model\n","svm_model.fit(X_train, y_train)\n","\n","# Make predictions on the test set\n","y_pred = svm_model.predict(X_test)\n","\n","# Calculate accuracy\n","accuracy = accuracy_score(y_test, y_pred)\n","print(\"Accuracy:\", accuracy)\n","\n","# Calculate precision\n","precision = precision_score(y_test, y_pred, average='macro')  # Use 'macro', 'micro', or 'weighted'\n","print(\"Precision:\", precision)\n","\n","# Calculate recall\n","recall = recall_score(y_test, y_pred, average='macro')  # Use 'macro', 'micro', or 'weighted'\n","print(\"Recall:\", recall)\n","\n","# Save the trained model to a file\n","joblib.dump(svm_model, \"svm_model.pkl\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LBJpzzTwrUoS","executionInfo":{"status":"ok","timestamp":1719826617899,"user_tz":-480,"elapsed":4778,"user":{"displayName":"Musfiqur Rahman","userId":"10444599639774013556"}},"outputId":"1ea1022c-32cc-4e78-bfd5-07ffb36b69b8"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9192154255319149\n","Precision: 0.9168216382108487\n","Recall: 0.9110527463100084\n"]},{"output_type":"execute_result","data":{"text/plain":["['svm_model.pkl']"]},"metadata":{},"execution_count":1}]},{"cell_type":"markdown","source":["# Load Model"],"metadata":{"id":"leJkJujwr2Bk"}},{"cell_type":"code","source":["import joblib\n","\n","# Load the trained model from the file\n","svm_model = joblib.load(\"svm_model.pkl\")\n","\n","# Now you can use svm_model.predict() to make predictions on new data"],"metadata":{"id":"NnCRUgXjr32q","colab":{"base_uri":"https://localhost:8080/","height":349},"executionInfo":{"status":"error","timestamp":1717610746568,"user_tz":-480,"elapsed":6,"user":{"displayName":"Musfiqur Rahman","userId":"10444599639774013556"}},"outputId":"fd318bf7-088c-4f0c-ddad-be46e1ff3556"},"execution_count":null,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: 'svm_model.pkl'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-d29768afa111>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Load the trained model from the file\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0msvm_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mjoblib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"svm_model.pkl\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Now you can use svm_model.predict() to make predictions on new data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/joblib/numpy_pickle.py\u001b[0m in \u001b[0;36mload\u001b[0;34m(filename, mmap_mode)\u001b[0m\n\u001b[1;32m    648\u001b[0m             \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_unpickle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    649\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 650\u001b[0;31m         \u001b[0;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'rb'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    651\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0m_read_fileobject\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfilename\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmmap_mode\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mfobj\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    652\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'svm_model.pkl'"]}]},{"cell_type":"markdown","source":["# Test Model SVM"],"metadata":{"id":"EcSChvkFsbg7"}},{"cell_type":"code","source":["import pandas as pd\n","import joblib\n","\n","# Load the trained model from the file\n","svm_model = joblib.load(\"svm_model.pkl\")\n","\n","# Assume you have new data in the same format as your training data\n","new_data = {\n","    \"SEND_SMS\": 1,\n","    \"android.telephony.SmsManager\": 1,\n","    \"READ_PHONE_STATE\": 1,\n","    \"RECEIVE_SMS\": 0,\n","    \"READ_SMS\": 0,\n","    \"android.intent.action.BOOT_COMPLETED\": 1,\n","    \"TelephonyManager.getLine1Number\": 0,\n","    \"WRITE_SMS\": 0,\n","    \"WRITE_HISTORY_BOOKMARKS\": 0,\n","    \"TelephonyManager.getSubscriberId\": 0,\n","    \"transact\": 0,\n","    \"onServiceConnected\": 0,\n","    \"bindService\": 0,\n","    \"ServiceConnection\": 0,\n","    \"android.os.Binder\": 0,\n","    \"attachInterface\": 0,\n","    \"Ljava.lang.Class.getCanonicalName\": 0,\n","    \"Ljava.net.URLDecoder\": 0,\n","    \"Ljava.lang.Class.cast\": 0,\n","    \"Ljava.lang.Class.getMethods\": 0\n","}\n","\n","# Convert the new data into a DataFrame\n","new_data_df = pd.DataFrame([new_data])\n","\n","# Make predictions on the new data\n","predicted_class = svm_model.predict(new_data_df)\n","\n","# Print the predicted class\n","print(\"Predicted Class:\", predicted_class[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ruduOh7Yse4l","executionInfo":{"status":"ok","timestamp":1714408513111,"user_tz":-480,"elapsed":324,"user":{"displayName":"Musfiqur Rahman","userId":"10444599639774013556"}},"outputId":"9213c66c-f8ae-4760-9826-9a62152b5eba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Predicted Class: S\n"]}]}]}